@charset "utf-8";
/* tag reset */
body, figure{margin: 0;padding: 0;}
a:link, a:visited, a:hover, a:active{text-decoration: none;color: inherit;}
img{vertical-align: top;}

#wrap{width: 300px;margin: 100px auto;border: 1px solid #000;}
.card, .card > div{width: 300px;height: 200px;}
.card{position: relative;margin-bottom: 100px;perspective: 500px;}
.card > div{position: absolute;top: 0;left: 0;transition: transform 1s;backface-visibility: hidden;transform-style: preserve-3d;}
/* backface-visibility: visible(기본) / hidden;
회전요소의 뒷면을 숨기는 기능

transform-style : flat(자식은 3D사용하지 않음-기본) / preserve-3d(자식은 3D사용함);
3D변환 요소의 자식요소도 3D를 사용할지 여부
중요:부모에게 작성

.card > .div는 rotateX(), rotateY()라는 3D
.card figcaption는 translateZ() 라는 3D를 가진다
부모는 자식을 2D(기본값)로 변경하기 때문에 preserve-3d를 선언해서 자식도 3D가 되도록한다
 */

/* figcaption에 translateZ로 앞으로 튀어나오게 추가 처리 */
.card > div figcaption{position: absolute;top: 50%;left: 50%;transform: translate(-50%, -50%) translateZ(100px);width: 180px;height: 50px;line-height: 50px;text-align: center;font-size: 20px;color: #ffffff;background: rgba(0, 0, 0,.5);backface-visibility: hidden;}

/* 수평방향 : Y축을 기준으로 회전
앞면 : 0도 -> 180도, backface-visibility
뒷면 : -180도 -> 0도, backface-visibility
.card : perspective: 500px;
*/
#hor .front{transform: rotateY(0deg);}
#hor .back{transform: rotateY(-180deg);}
/* hover, focus => 스크립트 연결 .card.flip를 갖음*/
#hor:hover .front, #hor.flip .front{transform: rotateY(180deg);}
#hor:hover .back, #hor.flip .back{transform: rotateY(0deg);}
/* 수직방향 : X축을 기준으로 회전
앞면 : 0도 -> 180도, backface-visibility
뒷면 : -180도 -> 0도, backface-visibility
.card : perspective: 500px;
rotate 할때 양수와 음수를 변경하면 방향이 바뀐다
*/
#ver .front{transform: rotateX(0deg);}
#ver .back{transform: rotateX(-180deg);}
/* hover, focus => 스크립트 연결 .card.flip를 갖음*/
#ver:hover .front, #ver.flip .front{transform: rotateX(180deg);}
#ver:hover .back, #ver.flip .back{transform: rotateX(0deg);}